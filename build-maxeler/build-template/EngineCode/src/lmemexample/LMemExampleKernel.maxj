/**
 * Document: Manager Compiler Tutorial (maxcompiler-manager-tutorial.pdf)
 * Chapter: 2      Example: 1      Name: LMem Example
 * MaxFile name: LMemExample
 * Summary:
 *     Manager design that connects the kernel's input and output streams to
 *     LMem using a linear access pattern.
 */
package lmemexample;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;

//no vector
//class LMemExampleKernel extends Kernel {
//
//	LMemExampleKernel(KernelParameters parameters) {
//		super(parameters);
//
//		DFEVar a2d = io.input("a2d", dfeUInt(32));
//		//DFEVar b2d = io.input("b2d", dfeUInt(32));
//
//		io.output("c2d", a2d, dfeUInt(32));
//	}
//}

//vector = 2
class LMemExampleKernel extends Kernel {

  LMemExampleKernel(KernelParameters parameters) {
    super(parameters);

    //define a vector type
    DFEVectorType<DFEVar> vectorType = new DFEVectorType<DFEVar>(dfeUInt(32), 2);

    //a2d is the input of that vector type
    DFEVector<DFEVar> a2d = io.input("a2d", vectorType);

    // Explicitly copy each vector element to c2d
    DFEVector<DFEVar> c2d = vectorType.newInstance(this);

    for ( int i = 0; i < 2; i++)
      c2d[i] <== a2d[i];

    // Output
    io.output("c2d", c2d, vectorType);
  }
}



