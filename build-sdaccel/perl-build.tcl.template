# Modified TCL script provided by Xilinx
# to use with streamOpenCL-FPGA benchmark
# Waqar Nabi, Glasgow, April 2016
# **************************************************

# ---------------------------------------------------------
# Parameters (Generated from script)
# ---------------------------------------------------------
<params>

# ---------------------------------------------------------
# Set Kernel
# ---------------------------------------------------------
set kernel "streamKernel"

# ---------------------------------------------------------
# Create solution, add device
# ---------------------------------------------------------
# Define the solution for SDAccel
create_solution -name $destDir -dir . -force
add_device -vbnv xilinx:adm-pcie-7v3:1ddr:1.0

# ---------------------------------------------------------
# Host Compiler Flags
# ---------------------------------------------------------
set    hostCompilerFlags "-g -Wall -D FPGA_DEVICE                           "
append hostCompilerFlags "-DTARGET=$TARGET                                  "
append hostCompilerFlags "-DSTREAMSFROMTO=$STREAMSFROMTO                    "
append hostCompilerFlags "-DKERNELBENCH=$KERNELBENCH                        "       
append hostCompilerFlags "-DWORD=$WORD                                      "           
append hostCompilerFlags "-DSTREAM_ARRAY_SIZE_DIM1=$STREAM_ARRAY_SIZE_DIM1  "
append hostCompilerFlags "-DVECTOR_SIZE=$VECTOR_SIZE                        "
append hostCompilerFlags "-DLOOPING=$LOOPING                                "
append hostCompilerFlags "-DNESTING=$NESTING                                "
append hostCompilerFlags "-DTESTING=$TESTING                                "
append hostCompilerFlags "-DFLOW=$FLOW                                      "
append hostCompilerFlags "-DACCESS_PATTERN=$ACCESS_PATTERN                  "



set_property -name host_cflags -value $hostCompilerFlags -objects [current_solution]

# ---------------------------------------------------------
# Host Source Files
# ---------------------------------------------------------
add_files "../host-all/streamHost-all.cpp"

# ---------------------------------------------------------
# Host Header Files
# ---------------------------------------------------------
add_files "../host-all/streamHost-all.h"
#add_files "../common/streamHost-common.h"

set_property file_type "c header files" [get_files "streamHost-all.h"]
#set_property file_type "c header files" [get_files "streamHost-common.h"]

# ---------------------------------------------------------
# Kernel Definition
# ---------------------------------------------------------
append kernelFile "../device/" $kernel ".cl"
create_kernel $kernel -type clc
add_files -kernel [get_kernels $kernel] $kernelFile

# ---------------------------------------------------------
# Kernel optimizations
# ---------------------------------------------------------
<max_memory_ports>


# ---------------------------------------------------------
#Kernel FLAGS
# ---------------------------------------------------------
# not needed as custom header file now created and included from kernel code
# set    kernelCompilerFlags "-DSTREAMSFROMTO=$STREAMSFROMTO                    "
# append kernelCompilerFlags "-DTARGET=$TARGET                                  "
# append kernelCompilerFlags "-DKERNELBENCH=$KERNELBENCH                        "       
# append kernelCompilerFlags "-DWORD=$WORD                                      "           
# append kernelCompilerFlags "-DSTREAM_ARRAY_SIZE_DIM1=$STREAM_ARRAY_SIZE_DIM1  "
# append kernelCompilerFlags "-DVECTOR_SIZE=$VECTOR_SIZE                        "
# append kernelCompilerFlags "-DLOOPING=$LOOPING                                "
# append kernelCompilerFlags "-DNESTING=$NESTING                                "
# append kernelCompilerFlags "-DTESTING=$TESTING                                "
# append kernelCompilerFlags "-DFLOW=$FLOW                                      "
# append kernelCompilerFlags "-DACCESS_PATTERN=$ACCESS_PATTERN                  "
# 
# set_property -name kernel_flags -value $kernelCompilerFlags -objects [get_kernels $kernel]

# ---------------------------------------------------------
#Kernel Optimizations
# ---------------------------------------------------------
#set_property max_memory_ports true [get_kernels $kernel]
#set_property memory_port_data_width 64 [get_kernels $kernel]

# ---------------------------------------------------------
# Define Binary Containers
# ---------------------------------------------------------
create_opencl_binary $kernel
set_property region "OCL_REGION_0" [get_opencl_binary $kernel]
create_compute_unit -opencl_binary [get_opencl_binary $kernel] -kernel [get_kernels $kernel] -name k1


# ---------------------------------------------------------
# Compile the design for CPU based emulation
# ---------------------------------------------------------
compile_emulation -flow cpu -opencl_binary [get_opencl_binary $kernel]
 
<estimate>

# ---------------------------------------------------------
# Run the compiled application in CPU based emulation mode
# ---------------------------------------------------------
append xclbinFile $kernel ".xclbin"
#run_emulation -flow cpu -args $xclbinFile


<hw>
